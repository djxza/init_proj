# The interpreter executable\n"
              "INTERPRETER = proj_interpreter\n"
              "\n"
              "# The project directory should be explicitly defined and not rely on external definitions\n"
              "PROJDIR = .proj\n"
              "\n"
              "# Fetch language, source, and binary directories\n"
              "LANG   = $(shell $(INTERPRETER) $(PROJDIR)/handle.json lang)\n"
              "SRCDIR = $(shell $(INTERPRETER) $(PROJDIR)/handle.json src)\n"
              "BINDIR = $(shell $(INTERPRETER) $(PROJDIR)/handle.json bin)\n"
              "\n"
              "# Ensure BINDIR and SRCDIR are valid\n"
              "$(shell mkdir -p $(BINDIR) $(SRCDIR))\n"
              "\n"
              "# Handle library directory\n"
              "LIBDIR = ./lib\n"
              "ifeq ($(shell $(INTERPRETER) $(PROJDIR)/handle.json libs), [])\n"
              "       EXISTS_LIBDIR = 0\n"
              "       PRINT_LIB = none\n"
              "else \n"
              "       EXISTS_LIBDIR = 1\n"
              "       PRINT_LIB = $(LIBDIR)\n"
              "       HANDLE_LIBS = @mkdir -p $(LIBDIR)\n"
              "endif\n"
              "\n"
              "# Handle include directory\n"
              "ifeq ($(shell $(INTERPRETER) $(PROJDIR)/handle.json incdir), false)\n"
              "       EXISTS_INCDIR = 0\n"
              "       INCDIR = $(SRCDIR)\n"
              "       PRINT_INC = none\n"
              "else \n"
              "       EXISTS_INCDIR = 1\n"
              "       INCDIR = $(shell $(INTERPRETER) $(PROJDIR)/handle.json incdir)\n"
              "       INCFLAGS = -I$(INCDIR)\n"
              "       PRINT_INC = $(INCDIR)\n"
              "endif\n"
              "\n"
              "# Compiler settings based on language and version\n"
              "ifeq ($(LANG), c++)\n"
              "       EXT = .cpp\n"
              "\n"
              "       IS23 = 0\n"
              "\n"
              "       # Determine compiler\n"
              "       CC = $(shell $(INTERPRETER) $(PROJDIR)/handle.json CC)++\n"
              "       ifeq ($(CC),)\n"
              "               # default to clang++ if not specified\n"
              "               CC = clang++\n"
              "       endif\n"
              "\n"
              "       # Handle language version\n"
              "       ifeq ($(shell $(INTERPRETER) $(PROJDIR)/handle.json langver), 23)\n"
              "               IS23 = 1\n"
              "               LANGVER_NUM = 2b\n"
              "       endif\n"
              "\n"
              "       ifeq ($(shell $(INTERPRETER) $(PROJDIR)/handle.json langver), 20)\n"
              "               LANGVER_NUM = 2a\n"
              "       else\n"
              "               ifeq ($(IS23), 0)\n"
              "                       LANGVER_NUM = $(shell $(INTERPRETER) $(PROJDIR)/handle.json langver)\n"
              "               endif\n"
              "       endif\n"
              "\n"
              "else\n"
              "       # C specific code\n"
              "       EXT = .c\n"
              "\n"
              "       # Determine C compiler\n"
              "       CC = $(shell $(INTERPRETER) $(PROJDIR)/handle.json CC)\n"
              "       ifeq ($(CC),)\n"
              "               # default to clang if not specified\n"
              "               CC = clang\n"
              "       endif\n"
              "endif\n"
              "\n"
              "# Construct language version flag\n"
              "LANGVER = -std=$(LANG)$(LANGVER_NUM)\n"
              "\n"
              "# Compiler flags\n"
              "CCFLAGS  = $(LANGVER)\n"
              "CCFLAGS += $(shell $(INTERPRETER) $(PROJDIR)/handle.json flags)\n"
              "CCFLAGS += $(INCFLAGS)\n"
              "\n"
              "# Include directories\n"
              "INCFLAGS += -I./src\n"
              "\n"
              "# Linker flags\n"
              "LDFLAGS += -lm -lpthread -ldl\n"
              "\n"
              "ifeq ($(LANG), c++)\n"
              "       LDFLAGS += -lstdc++\n"
              "endif\n"
              "\n"
              "# Source files and corresponding object files\n"
              "SRC = $(shell find $(SRCDIR) -name \"*$(EXT)\")\n"
              "OBJ = $(SRC:$(SRCDIR)/%$(EXT)=$(BINDIR)/%.o)\n"
              "\n"
              "default: all\n"
              "\n"
              "all: build\n"
              "\n"
              "# Info target to display project details\n"
              "info:\n"
              "       @echo \"init_proj displays app info:\"\n"
              "       @echo \"Project: $(shell $(INTERPRETER) $(PROJDIR)/handle.json name)\"\n"
              "       @echo \"Author: $(shell $(INTERPRETER) $(PROJDIR)/handle.json author)\"\n"
              "       @echo \"Version: $(shell $(INTERPRETER) $(PROJDIR)/handle.json version)\"\n"
              "       @echo \"Repo: $(shell $(INTERPRETER) $(PROJDIR)/handle.json repo)\"\n"
              "       @echo \"License: $(shell $(INTERPRETER) $(PROJDIR)/handle.json license)\"\n"
              "       @echo \"Description: $(shell $(INTERPRETER) $(PROJDIR)/handle.json description)\"\n"
              "       @echo \"Libraries: $(shell $(INTERPRETER) $(PROJDIR)/handle.json libs)\"\n"
              "       @echo \"Source files: $(SRC)\"\n"
              "       @echo \"CC: $(CC)\"\n"
              "       @echo \"All flags: $(CCFLAGS)\"\n"
              "       @echo \"SRCDIR: $(SRCDIR)\"\n"
              "       @echo \"LIBDIR: $(LIBDIR)\"\n"
              "       @echo \"INCDIR: $(PRINT_INC)\"\n"
              "       @echo \"LIBDIR: $(PRINT_LIB)\"\n"
              "       @echo \"INTERPRETER: $(INTERPRETER)\"\n"
              "       @echo \"make build will compile ALL $(EXT) files\"\n"
              "       @echo \"in $(SRCDIR) even the ones in subdirs\"\n"
              "\n"
              "# Object file rule\n"
              "$(BINDIR)/%.o: $(SRCDIR)/%$(EXT)\n"
              "       @mkdir -p $(dir $@)\n"
              "       $(CC) $(CCFLAGS) -c $< -o $@\n"
              "\n"
              "# Build target\n"
              "build: $(OBJ)\n"
              "       @echo \"Building project...\"\n"
              "       $(CC) $(CCFLAGS) -o $(BINDIR)/$(shell $(INTERPRETER) $(PROJDIR)/handle.json executable) $(OBJ) $(LDFLAGS)\n"
              "       @echo \"Build complete! Executable is in $(BINDIR)\"\n"
              "\n"
              "# Clean target\n"
              "clean:\n"
              "       rm -f $(BINDIR)/*.o\n"
              "       rm -f $(BINDIR)/$(shell $(INTERPRETER) $(PROJDIR)/handle.json executable)\n"